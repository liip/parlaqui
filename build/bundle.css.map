{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/Game.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { createEventDispatcher } from 'svelte'\n    import { writable } from 'svelte/store'\n    import { tweened } from 'svelte/motion'\n    import politicians from '../councillors.json'\n    let counter = 0\n    // let politician = politicians[0]\n    const dispatch = createEventDispatcher()\n    let time = writable()\n    let politician = {}\n    let answers = []\n    let rightAnswers = 0\n    const maxAnswers = 10\n    const maxTime = 10000\n\n    function next() {\n        generateAnswers()\n        politician = answers.filter(a => a.right)[0]\n        counter++\n        time = tweened(1, { duration: maxTime, delay: 1000 })\n        time.set(0)\n        if(counter > maxAnswers) {\n            dispatch('end', rightAnswers)\n        }\n    }\n    next()\n    \n    function onAnswer(pol) {\n        console.log($time)\n        rightAnswers += pol.right * Math.floor($time * maxTime / 1000)\n        next()\n    }\n\n    // random number in [min, max[\n    function rand(min, max) {\n        min = Math.ceil(min)\n        max = Math.floor(max)\n        return Math.floor(Math.random() * (max - min)) + min\n    }\n    \n    function generateAnswers() {\n        const maxAnswers = 4\n        const arr = [...politicians]\n        const res = []\n        const rightAnswer = rand(0, maxAnswers)\n        for(let i=0; i<maxAnswers; i++) {\n            const index = rand(0, arr.length)\n            const pol = arr.splice(index, 1)[0]\n            pol.right = i === rightAnswer\n            res.push(pol)\n        }\n        answers = res\n    }\n    function onKeydown(e) {\n        switch(e.key) {\n            case \"1\":\n                onAnswer(answers[0])\n                break\n            case \"2\":\n                onAnswer(answers[1])\n                break\n            case \"3\":\n                onAnswer(answers[2])\n                break\n            case \"4\":\n                onAnswer(answers[3])\n                break\n        }\n    }\n    \n</script>\n<svelte:window on:keydown={onKeydown} />\n<h2>Wer bin ich?</h2>\n<h3>{counter} / {politicians.length}</h3>\n<img src={politician.ImageUrl} alt=\"image of\">\n<div>\n    <progress value={$time} />\n</div>\n<div>\n{#each answers as answer}\n<button on:click={() => onAnswer(answer)}>{answer.FirstName} {answer.LastName}</button>\n{/each}\n</div>\n{rightAnswers}\n<style>\n    progress {\n        width: 100%;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AAqFI,QAAQ,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,AACf,CAAC"
}