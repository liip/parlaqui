{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte/motion/index.mjs","../../node_modules/svelte/transition/index.mjs","../../src/util.js","../../src/tracking.js","../../src/i18n.js","../../src/Progress.svelte","../../src/Avatar.svelte","../../src/Game.svelte","../../src/LanguageSwitch.svelte","../../src/CloseButton.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    return definition[2] && fn\n        ? $$scope.dirty | definition[2](fn(dirty))\n        : $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        $$.fragment && $$.fragment.p($$.ctx, $$.dirty);\n        $$.dirty = [-1];\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from '../store';\nimport { now, loop, assign } from '../internal';\nimport { linear } from '../easing';\n\nfunction is_date(obj) {\n    return Object.prototype.toString.call(obj) === '[object Date]';\n}\n\nfunction tick_spring(ctx, last_value, current_value, target_value) {\n    if (typeof current_value === 'number' || is_date(current_value)) {\n        // @ts-ignore\n        const delta = target_value - current_value;\n        // @ts-ignore\n        const velocity = (current_value - last_value) / (ctx.dt || 1 / 60); // guard div by 0\n        const spring = ctx.opts.stiffness * delta;\n        const damper = ctx.opts.damping * velocity;\n        const acceleration = (spring - damper) * ctx.inv_mass;\n        const d = (velocity + acceleration) * ctx.dt;\n        if (Math.abs(d) < ctx.opts.precision && Math.abs(delta) < ctx.opts.precision) {\n            return target_value; // settled\n        }\n        else {\n            ctx.settled = false; // signal loop to keep ticking\n            // @ts-ignore\n            return is_date(current_value) ?\n                new Date(current_value.getTime() + d) : current_value + d;\n        }\n    }\n    else if (Array.isArray(current_value)) {\n        // @ts-ignore\n        return current_value.map((_, i) => tick_spring(ctx, last_value[i], current_value[i], target_value[i]));\n    }\n    else if (typeof current_value === 'object') {\n        const next_value = {};\n        for (const k in current_value)\n            // @ts-ignore\n            next_value[k] = tick_spring(ctx, last_value[k], current_value[k], target_value[k]);\n        // @ts-ignore\n        return next_value;\n    }\n    else {\n        throw new Error(`Cannot spring ${typeof current_value} values`);\n    }\n}\nfunction spring(value, opts = {}) {\n    const store = writable(value);\n    const { stiffness = 0.15, damping = 0.8, precision = 0.01 } = opts;\n    let last_time;\n    let task;\n    let current_token;\n    let last_value = value;\n    let target_value = value;\n    let inv_mass = 1;\n    let inv_mass_recovery_rate = 0;\n    let cancel_task = false;\n    function set(new_value, opts = {}) {\n        target_value = new_value;\n        const token = current_token = {};\n        if (value == null || opts.hard || (spring.stiffness >= 1 && spring.damping >= 1)) {\n            cancel_task = true; // cancel any running animation\n            last_time = now();\n            last_value = new_value;\n            store.set(value = target_value);\n            return Promise.resolve();\n        }\n        else if (opts.soft) {\n            const rate = opts.soft === true ? .5 : +opts.soft;\n            inv_mass_recovery_rate = 1 / (rate * 60);\n            inv_mass = 0; // infinite mass, unaffected by spring forces\n        }\n        if (!task) {\n            last_time = now();\n            cancel_task = false;\n            task = loop(now => {\n                if (cancel_task) {\n                    cancel_task = false;\n                    task = null;\n                    return false;\n                }\n                inv_mass = Math.min(inv_mass + inv_mass_recovery_rate, 1);\n                const ctx = {\n                    inv_mass,\n                    opts: spring,\n                    settled: true,\n                    dt: (now - last_time) * 60 / 1000\n                };\n                const next_value = tick_spring(ctx, last_value, value, target_value);\n                last_time = now;\n                last_value = value;\n                store.set(value = next_value);\n                if (ctx.settled)\n                    task = null;\n                return !ctx.settled;\n            });\n        }\n        return new Promise(fulfil => {\n            task.promise.then(() => {\n                if (token === current_token)\n                    fulfil();\n            });\n        });\n    }\n    const spring = {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe,\n        stiffness,\n        damping,\n        precision\n    };\n    return spring;\n}\n\nfunction get_interpolator(a, b) {\n    if (a === b || a !== a)\n        return () => a;\n    const type = typeof a;\n    if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {\n        throw new Error('Cannot interpolate values of different type');\n    }\n    if (Array.isArray(a)) {\n        const arr = b.map((bi, i) => {\n            return get_interpolator(a[i], bi);\n        });\n        return t => arr.map(fn => fn(t));\n    }\n    if (type === 'object') {\n        if (!a || !b)\n            throw new Error('Object cannot be null');\n        if (is_date(a) && is_date(b)) {\n            a = a.getTime();\n            b = b.getTime();\n            const delta = b - a;\n            return t => new Date(a + t * delta);\n        }\n        const keys = Object.keys(b);\n        const interpolators = {};\n        keys.forEach(key => {\n            interpolators[key] = get_interpolator(a[key], b[key]);\n        });\n        return t => {\n            const result = {};\n            keys.forEach(key => {\n                result[key] = interpolators[key](t);\n            });\n            return result;\n        };\n    }\n    if (type === 'number') {\n        const delta = b - a;\n        return t => a + t * delta;\n    }\n    throw new Error(`Cannot interpolate ${type} values`);\n}\nfunction tweened(value, defaults = {}) {\n    const store = writable(value);\n    let task;\n    let target_value = value;\n    function set(new_value, opts) {\n        if (value == null) {\n            store.set(value = new_value);\n            return Promise.resolve();\n        }\n        target_value = new_value;\n        let previous_task = task;\n        let started = false;\n        let { delay = 0, duration = 400, easing = linear, interpolate = get_interpolator } = assign(assign({}, defaults), opts);\n        const start = now() + delay;\n        let fn;\n        task = loop(now => {\n            if (now < start)\n                return true;\n            if (!started) {\n                fn = interpolate(value, new_value);\n                if (typeof duration === 'function')\n                    duration = duration(value, new_value);\n                started = true;\n            }\n            if (previous_task) {\n                previous_task.abort();\n                previous_task = null;\n            }\n            const elapsed = now - start;\n            if (elapsed > duration) {\n                store.set(value = new_value);\n                return false;\n            }\n            // @ts-ignore\n            store.set(value = fn(easing(elapsed / duration)));\n            return true;\n        });\n        return task.promise;\n    }\n    return {\n        set,\n        update: (fn, opts) => set(fn(target_value, value), opts),\n        subscribe: store.subscribe\n    };\n}\n\nexport { spring, tweened };\n","import { cubicInOut, linear, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","\r\n// random number in [min, max[\r\nexport function rand(min, max) {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n","const enabled = false\r\n\r\nexport const languageSet = (language) => {\r\n    enabled && dataLayer.push({ event: 'language.set', language })\r\n}\r\n\r\nexport const gameStart = () => {\r\n    enabled && dataLayer.push({ event: 'game.start' })\r\n}\r\n\r\nexport const gameAbort = () => {\r\n    enabled && dataLayer.push({ event: 'game.abort' })\r\n}\r\n\r\nexport const gameEnd = (score) => {\r\n    enabled && dataLayer.push({ event: 'game.end', score })\r\n}\r\n\r\nexport const gameAnswerClick = ({wright, ID, wrightID, PartyAbbreviation}) => {\r\n    if(ID) {\r\n        enabled && dataLayer.push({ event: 'game.answer.click', wright, ID, wrightID, PartyAbbreviation })    \r\n    } else {\r\n        enabled && dataLayer.push({ event: 'game.answer.timeout'})    \r\n    }\r\n}\r\n\r\nexport default {\r\n    languageSet,\r\n    gameStart,\r\n    gameAbort,\r\n    gameEnd,\r\n    gameAnswerClick,\r\n}\r\n","import { writable, derived } from 'svelte/store'\r\nimport tracking from './tracking'\r\n\r\nconst defaultLanguage = 'de'\r\nexport const languages = ['de', 'fr', 'it', 'rm']\r\nexport const language = writable(getDefaultLanguage()) \r\nexport const setLanguage = lang => language.set(lang)\r\n\r\nlanguage.subscribe(setDefaultLanguage)\r\n\r\nfunction setDefaultLanguage(lang) {\r\n    location.hash = lang\r\n    localStorage.setItem('language', lang)\r\n    tracking.languageSet(lang)\r\n}\r\n\r\nfunction getDefaultLanguage() {\r\n    const urlLanguage = location.hash.substr(1)\r\n    return languages.find(l => l === urlLanguage) || localStorage.getItem('language') || defaultLanguage\r\n}\r\n\r\nconst dictionaries = {\r\n    de: {\r\n        title: 'Parlaqui',\r\n        description: 'Wer bin ich?',\r\n        play: 'Spielen / jetzt loslegen',\r\n        lastScore: 'Teile dein Ergebnis:',\r\n        score: 'Punkte:',\r\n    },\r\n    fr: {\r\n        title: 'Parlaqui',\r\n        description: 'Qui suis-je ?',\r\n        play: 'Jouer / commencer maintenant',\r\n        lastScore: 'Partagez vos résultats',\r\n        score: 'Points:',\r\n    },\r\n    it: {\r\n        title: 'Parlaqui',\r\n        description: 'chi sono io?',\r\n        play: 'gioca / inizia ora',\r\n        lastScore: 'condividi i tuoi risultati',\r\n        score: 'Punti:',\r\n    },\r\n    rm: {\r\n        title: 'Parlaqui',\r\n        description: 'tgi sun jau?',\r\n        play: 'guigar / cumenzar uss',\r\n        lastScore: 'parta tes resultat',\r\n        score: 'Punkte:',\r\n    },\r\n}\r\n\r\nexport const t = derived([language], (language) => (key) => { \r\n    const dictionary = dictionaries[language] || {}\r\n    return dictionary[key] || `#${key}#`\r\n})","<script>\r\n    export let items = []\r\n</script>\r\n\r\n<style>\r\n    .progress-bar {\r\n        display: flex;\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        padding: 0;\r\n    }\r\n    .dot {\r\n        width: 1rem;\r\n        height: 1rem;\r\n        line-height: 1rem;\r\n        margin: 0.25rem;\r\n        font-size: small;\r\n        text-align: center;\r\n        background-color: transparent;\r\n        border-radius: 50%;\r\n        border: 1px solid #ccc;\r\n    }\r\n    .true {\r\n        background-color: #6EA644;\r\n    }\r\n    .false {\r\n        background-color: #c02e00;\r\n    }\r\n</style>\r\n\r\n<div class=\"progress-bar\">\r\n    {#each items as item}\r\n    <div class={`dot ${item}`}></div>\r\n    {/each}\r\n</div>\r\n","<script>\r\n    export let url = ''\r\n    export let value = 0\r\n    const u = Math.PI * 125 * 2 - 0.1\r\n    $: offset = u * value\r\n    $: style = `stroke-dashoffset: ${offset}px; stroke-dasharray: ${u}px;`\r\n</script>\r\n<style>\r\n    img {\r\n        width: 260px;\r\n        height: 260px;\r\n        border-radius: 50%; \r\n    }\r\n    svg {\r\n        position: absolute;\r\n        top: -10px;\r\n        left: -10px;\r\n        stroke: #2c3e50;\r\n        fill: transparent;\r\n        stroke-width: 10px;\r\n        width: 280px;\r\n        height: 280px;\r\n        transform: rotateY(-180deg) rotateZ(-90deg);\r\n    }\r\n    .avatar {\r\n        position: relative;\r\n        display: inline-block;\r\n        margin-bottom: 1rem;\r\n    }\r\n</style>\r\n<div class=\"avatar\">\r\n    <img src={url} alt=\"image of\">\r\n    <svg viewBox=\"-130 -130 260 260\">\r\n        <circle cx=\"0\" cy=\"0\" r=\"125\" style={style} />\r\n    </svg>\r\n</div>\r\n","<script>\r\n    import { createEventDispatcher, onDestroy } from 'svelte'\r\n    import { readable } from 'svelte/store'\r\n    import { fly, crossfade } from 'svelte/transition'\r\n    import { flip } from 'svelte/animate';\r\n    import { quintOut } from 'svelte/easing';\r\n    import { tweened } from 'svelte/motion'\r\n    import { rand } from './util'\r\n    import politicians from '../councillors.json'\r\n    import { t } from './i18n'\r\n    import tracking from './tracking'\r\n    import Progress from './Progress.svelte'\r\n    import Avatar from './Avatar.svelte'\r\n\r\n    const dispatch = createEventDispatcher()\r\n    const maxRounds = 10\r\n    const maxTime = maxRounds * 1000\r\n    const maxAnswers = 4\r\n    let round = 0\r\n    let time = readable()\r\n    let politician = {}\r\n    let answers = []\r\n    let score = 0\r\n    let showResults = false\r\n    let timer\r\n    let answerTimer\r\n    let progress = new Array(maxRounds)\r\n    $: currentScore = Math.floor($time * 10)\r\n\r\n    onDestroy(() => {\r\n        clearTimeout(timer)\r\n        clearTimeout(answerTimer)\r\n    })\r\n    \r\n    next()\r\n    \r\n    function next() {\r\n        generateAnswers()\r\n        politician = answers.filter(a => a.wright)[0]\r\n        round++\r\n        time = tweened(1, { duration: maxTime, delay: 1000 })\r\n        time.set(0)\r\n        \r\n        timer = setTimeout(() => {\r\n            onAnswer({ wright: false, })\r\n        }, maxTime + 1000)\r\n\r\n        if(round > maxRounds) {\r\n            dispatch('end', score)\r\n        }\r\n    }\r\n    \r\n    function onAnswer(answer) {\r\n        if(showResults) {\r\n            return\r\n        }\r\n        clearTimeout(timer)\r\n        showAnswers()\r\n        progress[round-1] = answer.wright\r\n        score += answer.wright * currentScore\r\n        time = readable($time)\r\n        answer.wrightID = politician.ID\r\n        tracking.gameAnswerClick(answer)\r\n    }\r\n\r\n    function generateAnswers() {\r\n        // randomly take one item to set the gender\r\n        const filter = politicians[rand(0, politicians.length)]\r\n        // filter by gender, or answers could be too obvious\r\n        const arr = [...politicians.filter(p => p.GenderAsString === filter.GenderAsString)]\r\n        const res = []\r\n        const wrightAnswer = rand(0, maxAnswers)\r\n        for(let i=0; i<maxAnswers; i++) {\r\n            const index = rand(0, arr.length)\r\n            const answer = arr.splice(index, 1)[0]\r\n            answer.wright = i === wrightAnswer\r\n            res.push(answer)\r\n        }\r\n        answers = res\r\n    }\r\n\r\n    function showAnswers() {\r\n        showResults = true\r\n        answerTimer = setTimeout(() => {\r\n            answers = []\r\n            showResults = false\r\n            next()\r\n        }, 1000)\r\n    }\r\n    const answerLabel = ({FirstName, LastName, PartyAbbreviation}) => `${FirstName} ${LastName} (${PartyAbbreviation})`\r\n</script>\r\n<style>\r\n    .buttons {\r\n        padding-top: 1rem;\r\n    }\r\n    button {\r\n        width: 100%;\r\n    }\r\n    button:focus {\r\n        outline: 0;\r\n        border-color: #ccc;\r\n    }\r\n    section {\r\n        text-align: center;\r\n    }\r\n    .wrong {\r\n        background-color: #c02e00;\r\n    }\r\n    .wright {\r\n        background-color: #6EA644;\r\n    }\r\n</style>\r\n\r\n<section>\r\n    <Avatar url={politician.ImageUrl} value={1 - $time} />\r\n    <Progress items={progress} />\r\n    <div class=\"buttons\">\r\n        {#each answers as answer, index }\r\n        <button\r\n            on:click={() => onAnswer(answer)} \r\n            class={showResults ? (answer.wright ? 'wright' : 'wrong') : ''}\r\n        >\r\n            {answerLabel(answer)}\r\n        </button>\r\n        {/each}\r\n    </div>\r\n</section>\r\n","<script>\r\nimport { languages, language, setLanguage } from './i18n'\r\n$: currentLanguage = $language\r\n</script>\r\n\r\n<style>\r\n    nav {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n    a:hover {\r\n        text-decoration: none;\r\n    }\r\n    .lang {\r\n        color: #414141;\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        padding: 0.4rem;\r\n    }\r\n    .lang:hover, .lang.active {\r\n        text-decoration: underline;\r\n    }\r\n</style>\r\n\r\n<nav>\r\n{#each languages as language (language)}\r\n    <a class=\"lang\" class:active={language === currentLanguage} href={`/${language}`} on:click|preventDefault={() => setLanguage(language)}>{language}</a>\r\n{/each}\r\n</nav>","<script>\r\n    import { fade } from 'svelte/transition'\r\n</script>\r\n<style>\r\n    button {\r\n        width: 3rem;\r\n        height: 3rem;\r\n        border-radius: 50%;\r\n        margin: 1rem 1rem 0 0;\r\n        border: 1px solid white;\r\n        background-color: white;\r\n    }\r\n    button:hover {\r\n        box-shadow: 5px 5px 5px 0px rgba(0,0,0,0.15);\r\n        border-color: rgba(197, 191, 191, 0.1);\r\n    }\r\n    svg path {\r\n        stroke: #2c3e50;\r\n    }\r\n</style>\r\n<button transition:fade={{duration: 200}} on:click title=\"abbrechen\">\r\n    <svg viewBox=\"0 0 10 10\">\r\n        <path d=\"\r\n            M1,1\r\n            L9,9\r\n            M9,1\r\n            L1,9\r\n            \" \r\n    />\r\n    </svg>\r\n</button>\r\n","<script>\r\n\timport { tweened } from 'svelte/motion'\r\n\timport Game from './Game.svelte'\r\n\timport LanguageSwitch from './LanguageSwitch.svelte'\r\n\timport Icon from './Icon.svelte'\r\n\timport LiipLogo from './LiipLogo.svelte'\r\n\timport Logo from './Logo.svelte'\r\n\timport { t } from './i18n'\r\n\timport tracking from './tracking'\r\n\timport Progress from './Progress.svelte'\r\n\timport PlayButton from './PlayButton.svelte'\r\n\timport CloseButton from './CloseButton.svelte'\r\n\timport { fade, fly } from 'svelte/transition'\r\n\r\n\tlet playing = false\r\n\tlet ende = false\r\n\tlet lastScore = null\r\n\r\n\tfunction play() {\r\n\t\tplaying = true\r\n\t\ttracking.gameStart()\r\n\t}\r\n\tfunction stop() {\r\n\t\tplaying = false\r\n\t\tende = true\r\n\t\ttracking.gameAbort()\r\n\t}\r\n\tfunction end(e) {\r\n\t\tplaying = false\r\n\t\tende = true\r\n\t\tlastScore = e.detail\r\n\t\ttracking.gameEnd(lastScore)\t\t\r\n\t}\r\n</script>\r\n<style>\r\n\tmain {\r\n\t\tmargin-left: auto;\r\n\t\tmargin-right: auto;\r\n\t\tmax-width: 400px;\r\n\t\theight: 100%;\r\n\t\tpadding: 1rem;\r\n\t}\r\n\tfooter {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\ta {\r\n    \tcolor: #414141;\r\n\t}\r\n\t.background {\r\n\t\theight: 100%;\r\n\t}\r\n\tsection {\r\n\t\ttext-align: center;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\theader {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\tmargin-bottom: 1rem;\r\n\t}\r\n\t/*\r\n\t.background:before, .background:after {\r\n\t\tz-index: -1;\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\ttop: -20vw;\r\n\t\tleft: -20vw;\r\n\t\twidth: 100vw;\r\n\t\theight: 100vw;\r\n\t\tbackground: linear-gradient(rgba(176, 176, 150, 0.2), hsla(0, 0%, 100%, 0));\r\n\t\tborder-radius: 50%;\r\n\t}\r\n\t.background:after {\r\n\t\ttransform: rotate(100deg);\r\n\t\ttop: 20vw;\r\n\t\tleft: 20vw;\r\n\t}*/\r\n</style>\r\n<main>\r\n\t<div>\r\n\t\t<header class={playing && `playing`}>\r\n\t\t\t<Logo />\r\n\t\t\t{#if playing}\r\n\t\t\t<CloseButton on:click={stop} />\t\r\n\t\t\t{/if}\r\n\t\t</header>\r\n\t\t<section>\r\n\t\t{#if playing}\t\t\t\r\n\t\t\t<Game on:end={end} />\t\t\t\r\n\t\t{:else}\r\n\t\t\t<PlayButton on:click={play}>{$t('play')}</PlayButton>\r\n\t\t\t{#if lastScore !== null}\r\n\t\t\t\t<h2>{$t('lastScore')} {lastScore}</h2>\r\n\t\t\t{/if}\r\n\t\t{/if}\r\n\t\t</section>\r\n\t</div>\r\n\t<footer>\r\n\t\t<LanguageSwitch />\r\n\t\t<a href=\"https://liip.ch\"><LiipLogo /></a>\r\n\t</footer>\r\n</main>\r\n","import App from './App.svelte';\r\n\r\nconst app = new App({\r\n\ttarget: document.body\r\n});\r\n\r\nexport default app;"],"names":["noop","identity","x","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callback","unsub","unsubscribe","component_subscribe","component","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","slice","null_to_empty","value","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","toggle_class","toggle","classList","custom_event","type","detail","e","createEvent","initCustomEvent","stylesheet","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","style","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","get_current_component","Error","bubble","callbacks","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","shift","update","pop","has","fragment","before_update","dirty","after_update","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","Math","abs","start","end","group","go","easing","tick","css","then","destroy_block","lookup","key","create_component","mount_component","on_mount","m","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","hydrate","l","Array","from","childNodes","children","SvelteComponent","this","$destroy","index","splice","subscriber_queue","readable","writable","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","is_date","obj","prototype","toString","call","get_interpolator","isArray","arr","bi","getTime","delta","keys","interpolators","result","fade","linear","getComputedStyle","opacity","rand","min","max","ceil","floor","random","languageSet","language","gameStart","gameAbort","gameEnd","score","gameAnswerClick","wright","ID","wrightID","PartyAbbreviation","defaultLanguage","languages","urlLanguage","location","substr","find","localStorage","getItem","getDefaultLanguage","setLanguage","lang","setItem","tracking","dictionaries","de","title","description","play","lastScore","fr","it","rm","stores","initial_value","single","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","derived","items","url","u","PI","offset","ImageUrl","maxRounds","maxAnswers","createEventDispatcher","maxTime","round","time","timer","answerTimer","politician","answers","showResults","progress","next","generateAnswers","defaults","target_value","opts","previous_task","started","interpolate","abort","elapsed","tweened","setTimeout","onAnswer","answer","clearTimeout","showAnswers","currentScore","$time","politicians","GenderAsString","res","wrightAnswer","FirstName","LastName","preventDefault","old_blocks","get_key","dynamic","list","destroy","create_each_block","get_context","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","currentLanguage","$language","slot_ctx","playing","body"],"mappings":"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"}